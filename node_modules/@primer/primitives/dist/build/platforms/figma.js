"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.figma = void 0;
const filters_1 = require("../filters");
const validFigmaToken = (token) => {
    const validTypes = ['color', 'dimension', 'shadow', 'fontWeight', 'fontFamily', 'number'];
    // is a siource token, not an included one
    if (!(0, filters_1.isSource)(token))
        return false;
    if (`${token.value}`.substring(token.value.length - 2) === 'em')
        return false;
    // has a collection attribute
    if (!('$extensions' in token) ||
        !('org.primer.figma' in token.$extensions) ||
        !('collection' in token.$extensions['org.primer.figma']))
        return false;
    // is a color or dimension type
    return validTypes.includes(token.$type);
};
const figma = (outputFile, prefix, buildPath, options) => ({
    prefix,
    buildPath,
    transforms: [
        'color/rgbaFloat',
        'name/pathToFigma',
        // 'name/pathToSlashNotation',
        'figma/attributes',
        'fontFamily/figma',
        'float/pixelUnitless',
        'dimension/pixelUnitless',
        // 'border/figma',
        // 'typography/figma',
        'fontWeight/number',
    ],
    options: Object.assign({ basePxFontSize: 16, fontFamilies: {
            'fontStack/system': 'SF Pro Text',
            'fontStack/sansSerif': 'SF Pro Text',
            'fontStack/sansSerifDisplay': 'SF Pro Display',
            'fontStack/monospace': 'SF Mono',
        } }, options),
    files: [
        {
            destination: outputFile,
            filter: validFigmaToken,
            format: `json/figma`,
            options: {
                outputReferences: true,
                mode: options === null || options === void 0 ? void 0 : options.mode,
            },
        },
    ],
});
exports.figma = figma;
