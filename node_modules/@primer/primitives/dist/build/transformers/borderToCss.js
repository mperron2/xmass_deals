"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.borderToCss = void 0;
const isBorder_1 = require("../filters/isBorder");
/**
 * checks if all required properties exist on shadow token
 * @param object - BorderTokenValue
 * @returns void or throws error
 */
const checkForBorderTokenProperties = (border) => {
    const requiredProperties = ['color', 'width', 'style'];
    for (const prop of requiredProperties) {
        if (prop in border === false) {
            throw new Error(`Missing propery: ${prop} on border token ${JSON.stringify(border)}`);
        }
    }
};
/**
 * @description converts w3c border tokens in css border string
 * @type value transformer â€” [StyleDictionary.ValueTransform](https://github.com/amzn/style-dictionary/blob/main/types/Transform.d.ts)
 * @matcher matches all tokens of $type `border`
 * @transformer returns css border `string`
 */
exports.borderToCss = {
    type: `value`,
    transitive: true,
    matcher: isBorder_1.isBorder,
    transformer: ({ value }) => {
        //
        checkForBorderTokenProperties(value);
        // if value === string it was probably already transformed
        if (typeof value === 'string') {
            return value;
        }
        /* color | style | width */
        return `${value.color} ${value.style} ${value.width}`;
    },
};
