"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.shadowToCss = void 0;
const color2k_1 = require("color2k");
const filters_1 = require("../filters");
const alpha_1 = require("./utilities/alpha");
const checkRequiredTokenProperties_1 = require("./utilities/checkRequiredTokenProperties");
const getTokenValue_1 = require("./utilities/getTokenValue");
/**
 * @description converts w3c shadow tokens in css shadow string
 * @type value transformer â€” [StyleDictionary.ValueTransform](https://github.com/amzn/style-dictionary/blob/main/types/Transform.d.ts)
 * @matcher matches all tokens of $type `shadow`
 * @transformer returns css shadow `string`
 */
exports.shadowToCss = {
    type: `value`,
    transitive: true,
    matcher: filters_1.isShadow,
    transformer: (token) => {
        // extract value
        const { value } = token;
        // turn value into array
        const shadowValues = !Array.isArray(value) ? [value] : value;
        return shadowValues
            .map((shadow) => {
            // if value === string it was probably already transformed
            if (typeof shadow === 'string')
                return shadow;
            (0, checkRequiredTokenProperties_1.checkRequiredTokenProperties)(shadow, ['color', 'offsetX', 'offsetY', 'blur', 'spread']);
            /*css box shadow:  inset? | offset-x | offset-y | blur-radius | spread-radius | color */
            return `${shadow.inset === true ? 'inset ' : ''}${shadow.offsetX} ${shadow.offsetY} ${shadow.blur} ${shadow.spread} ${(0, color2k_1.toHex)((0, alpha_1.alpha)((0, getTokenValue_1.getTokenValue)(Object.assign(Object.assign({}, token), { value: shadow }), 'color'), shadow.alpha || 1, token))}`;
        })
            .join(', ');
    },
};
