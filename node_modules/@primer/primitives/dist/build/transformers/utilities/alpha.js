"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.alpha = void 0;
const color2k_1 = require("color2k");
/**
 * alpha
 * @description takes a colors string like hex or rgba and returns an rgba color with the specified alpha value
 * @param color color string like a `#334455` or `rgb(255,200,100)`
 * @param desiredAlpha number
 * @returns rgba value
 */
const alpha = (color, desiredAlpha, token) => {
    const [r, g, b, a] = (0, color2k_1.parseToRgba)(color);
    if (a < 1 && desiredAlpha < 1) {
        // eslint-disable-next-line no-console
        console.warn(`ðŸš¨ You are setting an alpha value of "${desiredAlpha}" for a color with an alpha value (${color}). The previous alpha value will be disregarded as if the color would have been 100% opaque.${token !== undefined ? `\n â†³ Token: "${token.name}" in file: "${token.filePath}"` : ''}`);
    }
    return (0, color2k_1.rgba)(r, g, b, desiredAlpha);
};
exports.alpha = alpha;
