"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.invalidTokenValuePropertyError = exports.invalidTokenValueError = void 0;
const namePathToDotNotation_1 = require("../namePathToDotNotation");
const composeValueErrorMessage = (token) => {
    // eslint-disable-next-line i18n-text/no-en
    return `Invalid token "${namePathToDotNotation_1.namePathToDotNotation.transformer(token, {})}" in file "${token.filePath}". Transformed value: "${JSON.stringify(token.value)}". ${token.original.value ? `Original value: "${JSON.stringify(token.original.value)}" ` : ''}This may be due to referencing a token that does not exists.`;
};
const composeValuePropertyErrorMessage = (token, property) => {
    // eslint-disable-next-line i18n-text/no-en
    return `Invalid property "${property}" of token "${namePathToDotNotation_1.namePathToDotNotation.transformer(token, {})}" in file "${token.filePath}". Transformed property value: "${token.value[property]}". ${token.original.value ? `Original value: "${token.original.value[property]}" ` : ''}This may be due to referencing a token that does not exists.`;
};
class invalidTokenValueError extends Error {
    constructor(token) {
        super(composeValueErrorMessage(token));
        Error.captureStackTrace(this, invalidTokenValueError);
    }
}
exports.invalidTokenValueError = invalidTokenValueError;
class invalidTokenValuePropertyError extends Error {
    constructor(token, property) {
        super(composeValuePropertyErrorMessage(token, property));
        Error.captureStackTrace(this, invalidTokenValuePropertyError);
    }
}
exports.invalidTokenValuePropertyError = invalidTokenValuePropertyError;
