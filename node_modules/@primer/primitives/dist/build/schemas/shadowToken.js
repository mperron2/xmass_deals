"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.shadowToken = exports.shadowValue = void 0;
const zod_1 = require("zod");
const baseToken_1 = require("./baseToken");
const referenceValue_1 = require("./referenceValue");
const colorHexValue_1 = require("./colorHexValue");
const alphaValue_1 = require("./alphaValue");
const dimensionValue_1 = require("./dimensionValue");
const tokenType_1 = require("./tokenType");
const collections_1 = require("./collections");
exports.shadowValue = zod_1.z
    .object({
    color: zod_1.z.union([colorHexValue_1.colorHexValue, referenceValue_1.referenceValue]),
    alpha: zod_1.z.union([alphaValue_1.alphaValue, referenceValue_1.referenceValue]),
    offsetX: zod_1.z.union([dimensionValue_1.dimensionValue, referenceValue_1.referenceValue]),
    offsetY: zod_1.z.union([dimensionValue_1.dimensionValue, referenceValue_1.referenceValue]),
    blur: zod_1.z.union([dimensionValue_1.dimensionValue, referenceValue_1.referenceValue]),
    spread: zod_1.z.union([dimensionValue_1.dimensionValue, referenceValue_1.referenceValue]),
    inset: zod_1.z.boolean().optional(),
})
    .strict();
exports.shadowToken = baseToken_1.baseToken
    .extend({
    $value: zod_1.z.union([exports.shadowValue, zod_1.z.array(exports.shadowValue), referenceValue_1.referenceValue]),
    $type: (0, tokenType_1.tokenType)('shadow'),
    $extensions: zod_1.z
        .object({
        'org.primer.figma': zod_1.z.object({
            collection: (0, collections_1.collection)(['mode']).optional(),
            mode: (0, collections_1.mode)([
                'light',
                'dark',
                'dark dimmed',
                'light high contrast',
                'dark high contrast',
                'light colorblind',
                'dark colorblind',
                'light tritanopia',
                'dark tritanopia',
            ]).optional(),
        }),
    })
        .optional(),
})
    .strict();
