import { z } from 'zod';
export declare const colorToken: z.ZodObject<z.objectUtil.extendShape<{
    $description: z.ZodOptional<z.ZodString>;
    deprecated: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodBoolean]>>;
}, {
    $value: z.ZodUnion<[z.ZodEffects<z.ZodString, string, string>, z.ZodEffects<z.ZodString, string, string>]>;
    $type: z.ZodLiteral<"string" | "number" | "border" | "color" | "fontFamily" | "fontWeight" | "dimension" | "shadow" | "typography" | "duration" | "custom-viewportRange">;
    alpha: z.ZodNullable<z.ZodOptional<z.ZodEffects<z.ZodAny, any, any>>>;
    mix: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        color: z.ZodString;
        weight: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        color: string;
        weight: number;
    }, {
        color: string;
        weight: number;
    }>>>;
    $extensions: z.ZodOptional<z.ZodObject<{
        'org.primer.figma': z.ZodObject<{
            collection: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
            mode: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
            scopes: z.ZodOptional<z.ZodEffects<z.ZodArray<z.ZodString, "many">, string[], string[]>>;
        }, "strip", z.ZodTypeAny, {
            mode?: string | undefined;
            collection?: string | undefined;
            scopes?: string[] | undefined;
        }, {
            mode?: string | undefined;
            collection?: string | undefined;
            scopes?: string[] | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        'org.primer.figma': {
            mode?: string | undefined;
            collection?: string | undefined;
            scopes?: string[] | undefined;
        };
    }, {
        'org.primer.figma': {
            mode?: string | undefined;
            collection?: string | undefined;
            scopes?: string[] | undefined;
        };
    }>>;
}>, "strict", z.ZodTypeAny, {
    $type: "string" | "number" | "border" | "color" | "fontFamily" | "fontWeight" | "dimension" | "shadow" | "typography" | "duration" | "custom-viewportRange";
    $value: string;
    alpha?: any;
    mix?: {
        color: string;
        weight: number;
    } | null | undefined;
    deprecated?: string | boolean | undefined;
    $extensions?: {
        'org.primer.figma': {
            mode?: string | undefined;
            collection?: string | undefined;
            scopes?: string[] | undefined;
        };
    } | undefined;
    $description?: string | undefined;
}, {
    $type: "string" | "number" | "border" | "color" | "fontFamily" | "fontWeight" | "dimension" | "shadow" | "typography" | "duration" | "custom-viewportRange";
    $value: string;
    alpha?: any;
    mix?: {
        color: string;
        weight: number;
    } | null | undefined;
    deprecated?: string | boolean | undefined;
    $extensions?: {
        'org.primer.figma': {
            mode?: string | undefined;
            collection?: string | undefined;
            scopes?: string[] | undefined;
        };
    } | undefined;
    $description?: string | undefined;
}>;
